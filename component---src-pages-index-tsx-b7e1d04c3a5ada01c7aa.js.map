{"version":3,"sources":["webpack:///./src/pages/index.tsx"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","frontmatter","fields","slug","key","style","fontSize","rhythm","marginBottom","fontFamily","fontWeight","boxShadow","to","date","formatReadingTime","timeToRead","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"2FAAA,kJA8EeA,UA5CG,SAAC,GAAwC,IAAtCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAc,IAAXC,EAAW,EAAXA,KACNL,EAAQK,EAAKC,YAAYN,OAASK,EAAKE,OAAOC,KACpD,OACE,6BAASC,IAAKJ,EAAKE,OAAOC,MACxB,gCACE,wBACEE,MAAO,CACLC,SAAUC,YAAO,GACjBC,aAAcD,YAAO,EAAI,GACzBE,WAAY,yBACZC,WAAY,WAGd,kBAAC,OAAD,CAAML,MAAO,CAAEM,UAAW,QAAUC,GAAIZ,EAAKE,OAAOC,MACjDR,IAGL,+BACGK,EAAKC,YAAYY,KADpB,MAESC,YAAkBd,EAAKe,cAGlC,iCACE,uBACEC,wBAAyB,CACvBC,OAAQjB,EAAKC,YAAYiB,aAAelB,EAAKmB,kBAaxD,IAAMC,EAAY","file":"component---src-pages-index-tsx-b7e1d04c3a5ada01c7aa.js","sourcesContent":["// Gatsby supports TypeScript natively!\r\nimport React from 'react';\r\nimport { PageProps, Link, graphql } from 'gatsby';\r\n\r\nimport Bio from '../components/bio';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport { rhythm } from '../utils/typography';\r\nimport { formatReadingTime } from '../utils/helpers';\r\n\r\ntype Data = {\r\n  site: {\r\n    siteMetadata: {\r\n      title: string;\r\n    };\r\n  };\r\n  allMarkdownRemark: {\r\n    edges: {\r\n      node: {\r\n        excerpt: string;\r\n        timeToRead: number;\r\n        frontmatter: {\r\n          title: string;\r\n          date: string;\r\n          description: string;\r\n        };\r\n        fields: {\r\n          slug: string;\r\n        };\r\n      };\r\n    }[];\r\n  };\r\n};\r\n\r\nconst BlogIndex = ({ data, location }: PageProps<Data>) => {\r\n  const siteTitle = data.site.siteMetadata.title;\r\n  const posts = data.allMarkdownRemark.edges;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"All posts\" />\r\n      <Bio />\r\n      {posts.map(({ node }) => {\r\n        const title = node.frontmatter.title || node.fields.slug;\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  fontSize: rhythm(1),\r\n                  marginBottom: rhythm(1 / 4),\r\n                  fontFamily: `Montserrat, sans-serif`,\r\n                  fontWeight: 'normal',\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>\r\n                {node.frontmatter.date}\r\n                {` â€¢ ${formatReadingTime(node.timeToRead)}`}\r\n              </small>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        );\r\n      })}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogIndex;\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          timeToRead\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}