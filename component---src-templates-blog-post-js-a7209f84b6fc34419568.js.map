{"version":3,"sources":["webpack:///./src/templates/blog-post.js"],"names":["BlogPostTemplate","data","pageContext","location","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","timeToRead","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","fontFamily","fontWeight","color","scale","display","date","formatReadingTime","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","pageQuery"],"mappings":"uPAsFeA,UA7EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SACvCC,EAAOH,EAAKI,eACZC,EAAYL,EAAKM,KAAKC,aAAaC,MACjCC,EAAmBR,EAAnBQ,SAAUC,EAAST,EAATS,KACZC,EAAaR,EAAKQ,WAExB,OACE,kBAAC,IAAD,CAAQT,SAAUA,EAAUM,MAAOH,GACjC,kBAAC,IAAD,CACEG,MAAOL,EAAKS,YAAYJ,MACxBK,YAAaV,EAAKS,YAAYC,aAAeV,EAAKW,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,EACdC,WAAW,yBACXC,WAAY,MACZC,MAAO,SAGRlB,EAAKS,YAAYJ,OAEpB,uBACEO,MAAK,+BACAO,aAAM,KADN,IAEHC,QAAQ,QACRL,aAAcD,YAAO,MAGtBd,EAAKS,YAAYY,KAPpB,MAQSC,YAAkBd,KAG7B,6BAASe,wBAAyB,CAAEC,OAAQxB,EAAKyB,QACjD,wBACEb,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLQ,QAAQ,OACRM,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACGvB,GACC,kBAAC,OAAD,CAAMwB,GAAIxB,EAASyB,OAAOC,KAAMC,IAAI,QAApC,KACK3B,EAASG,YAAYJ,QAI9B,4BACGE,GACC,kBAAC,OAAD,CAAMuB,GAAIvB,EAAKwB,OAAOC,KAAMC,IAAI,QAC7B1B,EAAKE,YAAYJ,MADpB,WAaP,IAAM6B,EAAS","file":"component---src-templates-blog-post-js-a7209f84b6fc34419568.js","sourcesContent":["import React from 'react';\r\nimport { Link, graphql } from 'gatsby';\r\n\r\nimport Bio from '../components/bio';\r\nimport Layout from '../components/layout';\r\nimport SEO from '../components/seo';\r\nimport { rhythm, scale } from '../utils/typography';\r\nimport { formatReadingTime } from '../utils/helpers';\r\n\r\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\r\n  const post = data.markdownRemark;\r\n  const siteTitle = data.site.siteMetadata.title;\r\n  const { previous, next } = pageContext;\r\n  const timeToRead = post.timeToRead;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO\r\n        title={post.frontmatter.title}\r\n        description={post.frontmatter.description || post.excerpt}\r\n      />\r\n      <article>\r\n        <header>\r\n          <h1\r\n            style={{\r\n              marginTop: rhythm(1),\r\n              marginBottom: 0,\r\n              fontFamily: `Montserrat, sans-serif`,\r\n              fontWeight: '600',\r\n              color: 'grey',\r\n            }}\r\n          >\r\n            {post.frontmatter.title}\r\n          </h1>\r\n          <p\r\n            style={{\r\n              ...scale(-1 / 5),\r\n              display: `block`,\r\n              marginBottom: rhythm(1),\r\n            }}\r\n          >\r\n            {post.frontmatter.date}\r\n            {` • ${formatReadingTime(timeToRead)}`}\r\n          </p>\r\n        </header>\r\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\r\n        <hr\r\n          style={{\r\n            marginBottom: rhythm(1),\r\n          }}\r\n        />\r\n        <footer>\r\n          <Bio />\r\n        </footer>\r\n      </article>\r\n\r\n      <nav>\r\n        <ul\r\n          style={{\r\n            display: `flex`,\r\n            flexWrap: `wrap`,\r\n            justifyContent: `space-between`,\r\n            listStyle: `none`,\r\n            padding: 0,\r\n          }}\r\n        >\r\n          <li>\r\n            {previous && (\r\n              <Link to={previous.fields.slug} rel=\"prev\">\r\n                ← {previous.frontmatter.title}\r\n              </Link>\r\n            )}\r\n          </li>\r\n          <li>\r\n            {next && (\r\n              <Link to={next.fields.slug} rel=\"next\">\r\n                {next.frontmatter.title} →\r\n              </Link>\r\n            )}\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPostTemplate;\r\n\r\nexport const pageQuery = graphql`\r\n  query BlogPostBySlug($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      id\r\n      excerpt(pruneLength: 160)\r\n      html\r\n      timeToRead\r\n      frontmatter {\r\n        title\r\n        date(formatString: \"MMMM DD, YYYY\")\r\n        description\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}